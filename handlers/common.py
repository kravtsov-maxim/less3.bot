from aiogram import types, F, Router
from aiogram.filters.command import Command
import logging
import random
from less3.keyboards.keyboards import kb_eng1, kb_eng2
from less3.utils.random_fox import fox


router = Router()


#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(Command('start')) #ENG
@router.message(Command('c—Ç–∞—Ä—Ç')) #RUS
async def cmd_start (message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {name}', reply_markup=kb_eng1)
    await message.answer(f'{name}, –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π', reply_markup=kb_eng2)

#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /info
@router.message(Command('info')) #ENG
@router.message(Command('–∏–Ω—Ñ–æ')) #RUS
async def cmd_info (message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–Ø –Ω–∞—á–∏–Ω–∞—é—â–∏–π –±–æ—Ç, –Ω–µ —Å—É–¥–∏—Ç–µ –º–µ–Ω—è —Å—Ç—Ä–æ–≥–æ :), {name}', reply_markup=kb_eng2)
    await message.answer(f'–Ø —É–º–µ—é –∫–∏–¥–∞—Ç—å –∫–æ—Å—Ç–∏ –∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏. –û—Å—Ç–∞–ª—å–Ω–æ–º—É –º—ã –æ–±—É—á–∞–µ–º—Å—è –∏ –ø—Ä–æ–±—É–µ–º –Ω–æ–≤–æ–µ)')

#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /admin
@router.message(Command('admin')) #ENG
@router.message(Command('–∞–¥–º–∏–Ω')) #RUS
async def cmd_admin (message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–ú–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–∑–±–∏—Ä–∞—Ç—å—Å—è, –∫–∞–∫ —è —Ä–∞–±–æ—Ç–∞—é. –ï—Å–ª–∏ —è —Å–ª–æ–º–∞—é—Å—å o_0, –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ –µ–º—É –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, {name}', reply_markup=kb_eng2)

#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /game_cube
@router.message(Command('game')) #ENG
@router.message(Command('–∏–≥—Ä–∞')) #RUS
@router.message(Command('–∏–≥—Ä–∞—Ç—å'))
async def cmd_game (message: types.Message):
    await message.answer_dice(emoji="üé≤", reply_markup=kb_eng2)

#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /fox
@router.message(Command('fox'))
@router.message(Command('–ª–∏—Å–∞'))
@router.message(F.text.lower() == '–ø–æ–∫–∞–∂–∏ –ª–∏—Å—É')
async def cmd_fox (message: types.Message):
    name = message.chat.first_name
    img_fox = fox()
 #   await message.answer(f'–î–µ—Ä–∂–∏ –ª–∏—Å—É, {name}', reply_markup=kb1)
   # await message.answer_photo(photo = img_fox)
  #  await bot.send_photo(message.from_user.id, photo = img_fox)

#–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /stop
@router.message(Command('stop'))
@router.message(Command('—Å—Ç–æ–ø'))
async def cmd_stop (message: types.Message):
    name = message.chat.first_name
    await message.answer(f'–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á!')
    await message.answer(f'{name}, –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏ /start', reply_markup=kb_eng1)


#–•–µ–Ω–¥–ª–µ—Ä –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è

#@dp.message(F.text)
#async def msg_echo(message: types.Message):
#    msg_user = message.text
#    await message.answer(f'–¢—ã –Ω–∞–ø–∏—Å–∞–ª - {msg_user}')

@router.message(F.text)
async def msg_echo(message: types.Message):
    msg_user = message.text.lower()
    name = message.chat.first_name
    if '–ø—Ä–∏–≤–µ—Ç' in msg_user:
        await message.answer(f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å, {name}!', reply_markup=kb_eng2)
    elif '–∑–¥–æ—Ä–æ–≤–æ' in msg_user:
        await message.answer(f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å, {name}!', reply_markup=kb_eng2)
    elif '–ø–æ–∫–∞' == msg_user:
        await message.answer(f'–ü–æ–∫–∞-–ø–æ–∫–∞, {name}', reply_markup=kb_eng2)
    elif '–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è' == msg_user:
        await message.answer(f'–•–æ—Ä–æ—à–µ–≥–æ –í–∞–º –æ—Ç–¥—ã—Ö–∞!, {name}', reply_markup=kb_eng2)
    elif '–ª–∏—Å–∞' in msg_user:
        await message.answer(f'–°–º–æ—Ç—Ä–∏ —á—Ç–æ —É –º–µ–Ω—è –µ—Å—Ç—å  - {name}', reply_markup=kb2)
    else:
        await message.answer(f'–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ —Å–ª–æ–≤–∞')
